@page "/Chat"

@using KristofferStrube.Blazor.DOM
@using KristofferStrube.Blazor.FileAPI
@using KristofferStrube.Blazor.MediaCaptureStreams
@using KristofferStrube.Blazor.WebAudio
@using KristofferStrube.Blazor.WebIDL.Exceptions
@using Microsoft.SemanticKernel.ChatCompletion
@using OpenAI.Chat
@using TranslationTeacherWasm.Shared
@inject IJSRuntime JSRuntime
@inject IMediaDevicesService MediaDevicesService
@inject IURLService URLService
@inject WhisperApiClient WhisperApiClient
@inject IConfiguration Configuration
@inject ParlerApiClient ParlerApiClient
@implements IAsyncDisposable

<h3>Chat</h3>

<b>Current Status: @(status)</b><br/>
<b>Selected Language: @(selectedLanguage)</b><br/>
<b>Spoken Audio Text: @(spokenAudioTranscribed)</b><br/>
<b>Translated Spoken Text To English: @(userTranslatedToEnglish)</b><br/>
<b>NPC Response Text: @(responseText)</b><br/>
<b>NPC Response Translated To @(selectedLanguage): @(npcTranslatedToLanguage)</b><br/>
<br/>

<label for="languageSelect">Select Language:</label>
<select id="languageSelect" @bind=selectedLanguage>
    <option value="es,spanish">Spanish</option>
    <option value="fr,french">French</option>
</select>

<br/>

@if (error is not null)
{
    <code>@error</code>
}
else if (mediaStream is null)
{
    <button class="btn btn-success" @onclick=OpenAudioStream>Open Microphone</button>
}
else if (recorder is null)
{
    <svg class="bi" viewBox="0 0 16 16" height="60">
        <g @onclick="StartRecording" style="cursor:pointer">
            <title>Start Recording</title>
            <circle stroke="black" stroke-width="0" fill="#B61C1C" cx="8" cy="4" r="2"></circle>
            <circle stroke="black" stroke-width="0" fill="#B61C1C" cx="8" cy="8" r="2"></circle>
            <rect stroke="black" stroke-width="0" fill="#B61C1C" x="6" y="4" width="4" height="4"></rect>
            <path stroke="#B61C1C" stroke-width="1.5" fill="none" d="M 4 8 C 4 13 12 13 12 8" stroke-linecap="round"></path>
            <line stroke="#B61C1C" stroke-width="1.5" x1="8" y1="13" x2="8" y2="12" stroke-linecap="round"></line>
            <circle stroke="#B61C1C" stroke-width="1" fill="transparent" cx="8" cy="8" r="7"></circle>
        </g>
    </svg>
    <AmplitudePlot Analyser="liveAnalyzer" />
    <br />
    @if (audioOptions.Count > 0)
    {
        <label for="audioSource">Audio Source</label>
        <select id="audioSource" @bind=selectedAudioSource @bind:after="OpenAudioStream">
            @foreach (var option in audioOptions)
            {
                <option value="@option.id" selected="@(option.id == selectedAudioSource)">@option.label</option>
            }
        </select>
    }
}
else if (audioBuffer is null)
{
    <svg class="bi" viewBox="0 0 16 16" height="60">
        <g @onclick="StopRecording" style="cursor:pointer">
            <title>Stop Recording</title>
            <circle stroke="#212121" stroke-width="1" fill="transparent" cx="8" cy="8" r="7"></circle>
            <rect stroke="#212121" stroke-width="1" fill="#212121" x="9" y="4" width="2" height="8" stroke-linejoin="round" stroke-linecap="round"></rect>
            <rect stroke="#212121" stroke-width="1" fill="#212121" x="5" y="4" width="2" height="8" stroke-linejoin="round" stroke-linecap="round"></rect>
        </g>
    </svg>
    <AmplitudePlot Analyser="liveAnalyzer" Color="#F00" />
}
else if (npcSpokenResponse != null)
{
    <svg class="bi" viewBox="0 0 16 16" height="60">
        <g @onclick="StopPlayingRecording" style="cursor:pointer">
            <title>
                Stop Playing Recording
            </title>
            <circle stroke="#B61C1C" stroke-width="1" fill="transparent" cx="8" cy="8" r="7"></circle>
            <rect stroke="#B61C1C" stroke-width="1" fill="#B61C1C" x="5" y="5" width="6" height="6" stroke-linejoin="round"></rect>
        </g>
    </svg>
    <br />
    <AmplitudePlot @ref=plot Analyser="bufferAnalyzer" />
}